{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cedse\\\\Desktop\\\\Abschlussarbeit\\\\AbschlussarbeitM233-1\\\\frontend\\\\src\\\\pages\\\\RoomsOverviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Box, Typography, TextField, List, ListItem, ListItemText, Chip, Grid, Button, Tabs, Tab, IconButton } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport api from \"../api/axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ROOMS = [{\n  number: 101,\n  capacity: 4\n}, {\n  number: 102,\n  capacity: 6\n}, {\n  number: 103,\n  capacity: 8\n}, {\n  number: 104,\n  capacity: 10\n}, {\n  number: 105,\n  capacity: 12\n}];\nconst RoomsOverviewPage = () => {\n  _s();\n  const [dateFrom, setDateFrom] = useState(() => new Date().toISOString().slice(0, 10));\n  const [dateTo, setDateTo] = useState(() => new Date().toISOString().slice(0, 10));\n  const [reservations, setReservations] = useState({});\n  const [myReservations, setMyReservations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const navigate = useNavigate();\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchReservations = async () => {\n      setLoading(true);\n      const resObj = {};\n      for (let room of ROOMS) {\n        try {\n          // Nur laden, wenn room und dateFrom gesetzt sind\n          if (!room.number || !dateFrom) {\n            resObj[room.number] = [];\n            continue;\n          }\n          let allRes = [];\n          let d = new Date(dateFrom);\n          const to = new Date(dateTo);\n          while (d <= to) {\n            const dateStr = d.toISOString().slice(0, 10);\n            const res = await api.get(`/reservations?room=${room.number}&date=${dateStr}`);\n            allRes = allRes.concat(res.data.map(r => ({\n              ...r,\n              date: dateStr\n            })));\n            d.setDate(d.getDate() + 1);\n          }\n          resObj[room.number] = allRes;\n        } catch {\n          resObj[room.number] = [];\n        }\n      }\n      setReservations(resObj);\n      setLoading(false);\n    };\n    if (dateFrom && dateTo) fetchReservations();\n  }, [dateFrom, dateTo]);\n  useEffect(() => {\n    const fetchMyReservations = async () => {\n      if (user && user.email) {\n        try {\n          const response = await api.get(`/reservations/my-reservations?userEmail=${user.email}`);\n          setMyReservations(response.data);\n        } catch (error) {\n          console.error(\"Fehler beim Laden der eigenen Reservierungen:\", error);\n          setMyReservations([]);\n        }\n      }\n    };\n    fetchMyReservations();\n  }, [user]);\n  const handleDeleteReservation = async reservationId => {\n    if (window.confirm(\"Möchten Sie diese Reservierung wirklich löschen?\")) {\n      try {\n        await api.delete(`/reservations/${reservationId}?userEmail=${user.email}`);\n        // Aktualisiere die Liste der eigenen Reservierungen\n        setMyReservations(prev => prev.filter(r => r.id !== reservationId));\n        // Aktualisiere auch die Raumübersicht\n        const updatedReservations = {\n          ...reservations\n        };\n        Object.keys(updatedReservations).forEach(roomNumber => {\n          updatedReservations[roomNumber] = updatedReservations[roomNumber].filter(r => r.id !== reservationId);\n        });\n        setReservations(updatedReservations);\n        alert(\"Reservierung erfolgreich gelöscht!\");\n      } catch (error) {\n        var _error$response, _error$response$data;\n        alert(\"Fehler beim Löschen der Reservierung: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message));\n      }\n    }\n  };\n  const formatDateRange = (dateFrom, dateTo) => {\n    if (dateFrom === dateTo) {\n      return new Date(dateFrom).toLocaleDateString('de-DE');\n    }\n    return `${new Date(dateFrom).toLocaleDateString('de-DE')} - ${new Date(dateTo).toLocaleDateString('de-DE')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 1000,\n      mx: \"auto\",\n      mt: 4,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"R\\xE4ume \\xDCbersicht\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: (e, newValue) => setActiveTab(newValue),\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Alle R\\xE4ume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Meine Buchungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Von-Datum\",\n            type: \"date\",\n            value: dateFrom,\n            onChange: e => setDateFrom(e.target.value),\n            fullWidth: true,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Bis-Datum\",\n            type: \"date\",\n            value: dateTo,\n            onChange: e => setDateTo(e.target.value),\n            fullWidth: true,\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), ROOMS.map(room => {\n        const resList = reservations[room.number] || [];\n        const isAvailable = resList.length === 0;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            p: 2,\n            border: \"1px solid #ccc\",\n            borderRadius: 2,\n            cursor: \"pointer\",\n            '&:hover': {\n              background: '#f5f5f5'\n            }\n          },\n          onClick: () => navigate(`/reservation?room=${room.number}&date=${dateFrom}`),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Zimmer \", room.number, \" (max. \", room.capacity, \" Personen)\", isAvailable ? /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Verf\\xFCgbar\",\n              color: \"success\",\n              sx: {\n                ml: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Belegt\",\n              color: \"error\",\n              sx: {\n                ml: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), isAvailable ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Keine Buchungen im gew\\xE4hlten Zeitraum.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: resList.map(r => {\n              var _r$fromTime, _r$toTime;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `Am ${r.date} von ${(_r$fromTime = r.fromTime) === null || _r$fromTime === void 0 ? void 0 : _r$fromTime.slice(0, 5)} bis ${(_r$toTime = r.toTime) === null || _r$toTime === void 0 ? void 0 : _r$toTime.slice(0, 5)}`,\n                  secondary: `Teilnehmer: ${r.participants}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this)\n              }, r.id + r.date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)]\n        }, room.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true), activeTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: !user ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"Bitte loggen Sie sich ein, um Ihre Buchungen zu sehen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this) : myReservations.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"Sie haben noch keine Buchungen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: myReservations.map(reservation => {\n          var _reservation$fromTime, _reservation$toTime;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              border: \"1px solid #ccc\",\n              borderRadius: 2,\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"Zimmer \", reservation.room]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Datum: \", formatDateRange(reservation.dateFrom, reservation.dateTo)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Zeit: \", (_reservation$fromTime = reservation.fromTime) === null || _reservation$fromTime === void 0 ? void 0 : _reservation$fromTime.slice(0, 5), \" - \", (_reservation$toTime = reservation.toTime) === null || _reservation$toTime === void 0 ? void 0 : _reservation$toTime.slice(0, 5)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [\"Teilnehmer: \", reservation.participants]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), reservation.remark && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Bemerkung: \", reservation.remark]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"error\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteReservation(reservation.id);\n              },\n              title: \"Reservierung l\\xF6schen\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, reservation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Lade Buchungen ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomsOverviewPage, \"mNWD4Nqc2CIq6pR6bwWWgjguYto=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomsOverviewPage;\nexport default RoomsOverviewPage;\nvar _c;\n$RefreshReg$(_c, \"RoomsOverviewPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Box","Typography","TextField","List","ListItem","ListItemText","Chip","Grid","Button","Tabs","Tab","IconButton","DeleteIcon","api","useNavigate","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ROOMS","number","capacity","RoomsOverviewPage","_s","dateFrom","setDateFrom","Date","toISOString","slice","dateTo","setDateTo","reservations","setReservations","myReservations","setMyReservations","loading","setLoading","activeTab","setActiveTab","navigate","user","fetchReservations","resObj","room","allRes","d","to","dateStr","res","get","concat","data","map","r","date","setDate","getDate","fetchMyReservations","email","response","error","console","handleDeleteReservation","reservationId","window","confirm","delete","prev","filter","id","updatedReservations","Object","keys","forEach","roomNumber","alert","_error$response","_error$response$data","message","formatDateRange","toLocaleDateString","sx","maxWidth","mx","mt","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","newValue","mb","label","container","spacing","item","xs","type","target","fullWidth","InputLabelProps","shrink","resList","isAvailable","length","border","borderRadius","cursor","background","onClick","color","ml","dense","_r$fromTime","_r$toTime","primary","fromTime","toTime","secondary","participants","reservation","_reservation$fromTime","_reservation$toTime","display","justifyContent","flexGrow","remark","stopPropagation","title","_c","$RefreshReg$"],"sources":["C:/Users/cedse/Desktop/Abschlussarbeit/AbschlussarbeitM233-1/frontend/src/pages/RoomsOverviewPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Box, Typography, TextField, List, ListItem, ListItemText, Chip, Grid, Button, Tabs, Tab, IconButton } from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport api from \"../api/axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst ROOMS = [\r\n  { number: 101, capacity: 4 },\r\n  { number: 102, capacity: 6 },\r\n  { number: 103, capacity: 8 },\r\n  { number: 104, capacity: 10 },\r\n  { number: 105, capacity: 12 },\r\n];\r\n\r\nconst RoomsOverviewPage = () => {\r\n  const [dateFrom, setDateFrom] = useState(() => new Date().toISOString().slice(0, 10));\r\n  const [dateTo, setDateTo] = useState(() => new Date().toISOString().slice(0, 10));\r\n  const [reservations, setReservations] = useState({});\r\n  const [myReservations, setMyReservations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchReservations = async () => {\r\n      setLoading(true);\r\n      const resObj = {};\r\n      for (let room of ROOMS) {\r\n        try {\r\n          // Nur laden, wenn room und dateFrom gesetzt sind\r\n          if (!room.number || !dateFrom) {\r\n            resObj[room.number] = [];\r\n            continue;\r\n          }\r\n          let allRes = [];\r\n          let d = new Date(dateFrom);\r\n          const to = new Date(dateTo);\r\n          while (d <= to) {\r\n            const dateStr = d.toISOString().slice(0, 10);\r\n            const res = await api.get(`/reservations?room=${room.number}&date=${dateStr}`);\r\n            allRes = allRes.concat(res.data.map(r => ({ ...r, date: dateStr })));\r\n            d.setDate(d.getDate() + 1);\r\n          }\r\n          resObj[room.number] = allRes;\r\n        } catch {\r\n          resObj[room.number] = [];\r\n        }\r\n      }\r\n      setReservations(resObj);\r\n      setLoading(false);\r\n    };\r\n    if (dateFrom && dateTo) fetchReservations();\r\n  }, [dateFrom, dateTo]);\r\n\r\n  useEffect(() => {\r\n    const fetchMyReservations = async () => {\r\n      if (user && user.email) {\r\n        try {\r\n          const response = await api.get(`/reservations/my-reservations?userEmail=${user.email}`);\r\n          setMyReservations(response.data);\r\n        } catch (error) {\r\n          console.error(\"Fehler beim Laden der eigenen Reservierungen:\", error);\r\n          setMyReservations([]);\r\n        }\r\n      }\r\n    };\r\n    fetchMyReservations();\r\n  }, [user]);\r\n\r\n  const handleDeleteReservation = async (reservationId) => {\r\n    if (window.confirm(\"Möchten Sie diese Reservierung wirklich löschen?\")) {\r\n      try {\r\n        await api.delete(`/reservations/${reservationId}?userEmail=${user.email}`);\r\n        // Aktualisiere die Liste der eigenen Reservierungen\r\n        setMyReservations(prev => prev.filter(r => r.id !== reservationId));\r\n        // Aktualisiere auch die Raumübersicht\r\n        const updatedReservations = { ...reservations };\r\n        Object.keys(updatedReservations).forEach(roomNumber => {\r\n          updatedReservations[roomNumber] = updatedReservations[roomNumber].filter(r => r.id !== reservationId);\r\n        });\r\n        setReservations(updatedReservations);\r\n        alert(\"Reservierung erfolgreich gelöscht!\");\r\n      } catch (error) {\r\n        alert(\"Fehler beim Löschen der Reservierung: \" + (error.response?.data?.error || error.message));\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDateRange = (dateFrom, dateTo) => {\r\n    if (dateFrom === dateTo) {\r\n      return new Date(dateFrom).toLocaleDateString('de-DE');\r\n    }\r\n    return `${new Date(dateFrom).toLocaleDateString('de-DE')} - ${new Date(dateTo).toLocaleDateString('de-DE')}`;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1000, mx: \"auto\", mt: 4, p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>Räume Übersicht</Typography>\r\n      \r\n      <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)} sx={{ mb: 3 }}>\r\n        <Tab label=\"Alle Räume\" />\r\n        <Tab label=\"Meine Buchungen\" />\r\n      </Tabs>\r\n\r\n      {activeTab === 0 && (\r\n        <>\r\n          <Grid container spacing={2} sx={{ mb: 3 }}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"Von-Datum\"\r\n                type=\"date\"\r\n                value={dateFrom}\r\n                onChange={e => setDateFrom(e.target.value)}\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"Bis-Datum\"\r\n                type=\"date\"\r\n                value={dateTo}\r\n                onChange={e => setDateTo(e.target.value)}\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {ROOMS.map(room => {\r\n            const resList = reservations[room.number] || [];\r\n            const isAvailable = resList.length === 0;\r\n            return (\r\n              <Box\r\n                key={room.number}\r\n                sx={{ mb: 2, p: 2, border: \"1px solid #ccc\", borderRadius: 2, cursor: \"pointer\", '&:hover': { background: '#f5f5f5' } }}\r\n                onClick={() => navigate(`/reservation?room=${room.number}&date=${dateFrom}`)}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Zimmer {room.number} (max. {room.capacity} Personen)\r\n                  {isAvailable ? (\r\n                    <Chip label=\"Verfügbar\" color=\"success\" sx={{ ml: 2 }} />\r\n                  ) : (\r\n                    <Chip label=\"Belegt\" color=\"error\" sx={{ ml: 2 }} />\r\n                  )}\r\n                </Typography>\r\n                {isAvailable ? (\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Keine Buchungen im gewählten Zeitraum.</Typography>\r\n                ) : (\r\n                  <List dense>\r\n                    {resList.map(r => (\r\n                      <ListItem key={r.id + r.date}>\r\n                        <ListItemText\r\n                          primary={`Am ${r.date} von ${r.fromTime?.slice(0,5)} bis ${r.toTime?.slice(0,5)}`}\r\n                          secondary={`Teilnehmer: ${r.participants}`}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                )}\r\n              </Box>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 1 && (\r\n        <Box>\r\n          {!user ? (\r\n            <Typography color=\"text.secondary\">Bitte loggen Sie sich ein, um Ihre Buchungen zu sehen.</Typography>\r\n          ) : myReservations.length === 0 ? (\r\n            <Typography color=\"text.secondary\">Sie haben noch keine Buchungen.</Typography>\r\n          ) : (\r\n            <List>\r\n              {myReservations.map(reservation => (\r\n                <ListItem\r\n                  key={reservation.id}\r\n                  sx={{ \r\n                    border: \"1px solid #ccc\", \r\n                    borderRadius: 2, \r\n                    mb: 2,\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Box sx={{ flexGrow: 1 }}>\r\n                    <Typography variant=\"h6\">\r\n                      Zimmer {reservation.room}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Datum: {formatDateRange(reservation.dateFrom, reservation.dateTo)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Zeit: {reservation.fromTime?.slice(0,5)} - {reservation.toTime?.slice(0,5)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Teilnehmer: {reservation.participants}\r\n                    </Typography>\r\n                    {reservation.remark && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Bemerkung: {reservation.remark}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                  <IconButton\r\n                    color=\"error\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDeleteReservation(reservation.id);\r\n                    }}\r\n                    title=\"Reservierung löschen\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {loading && <Typography>Lade Buchungen ...</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RoomsOverviewPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}